import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.jetbrains.kotlin.jvm' version '1.9.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.22'
	id 'net.researchgate.release' version '3.0.2'
	id 'com.google.cloud.tools.jib' version '3.3.2'
	id 'org.openrewrite.rewrite' version '6.8.4'
}

group = 'be.chesteric31'
version = '1.0.6'

java {
	sourceCompatibility = JavaVersion.VERSION_17
}

repositories {
	mavenCentral()
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-hateoas')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.jetbrains.kotlin:kotlin-reflect')
	implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
	implementation('org.flywaydb:flyway-core')
	implementation('com.cloudinary:cloudinary-http44:1.22.1')
	runtimeOnly('org.postgresql:postgresql')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('io.projectreactor:reactor-test')
	testImplementation "org.junit.jupiter:junit-jupiter:5.10.2"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.10.2"
    rewrite('org.openrewrite.recipe:rewrite-spring:5.5.0')
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '17'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

release {
	git {
		requireBranch.set('master')
	}
}

rewrite {
	activeRecipe("org.openrewrite.java.spring.boot3.UpgradeSpringBoot_3_2")
}